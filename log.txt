[2021-08-20 04:02:17] (profile_api) HTTP error 404 for Dactyl-stormrage
[2021-08-20 04:02:22] (profile_api) HTTP error 404 for Watoomga-tichondrius
[2021-08-20 04:02:30] (profile_api) HTTP error 404 for Hastyhamster-sargeras
[2021-08-20 04:02:47] (profile_api) HTTP error 404 for Pirelli-blackhand
[2021-08-20 04:02:51] (profile_api) HTTP error 404 for Daxiabiedawo-illidan
[2021-08-20 04:03:11] (profile_api) HTTP error 404 for Shouzhang-illidan
[2021-08-20 04:03:20] (profile_api) HTTP error 404 for Pokemonsp-tichondrius
[2021-08-20 04:03:28] (profile_api) HTTP error 404 for Milkduzmegud-kelthuzad
[2021-08-20 04:03:34] (profile_api) HTTP error 404 for Subuwu-blackhand
[2021-08-20 04:04:10] (profile_api) HTTP error 404 for Thingx-barthilas
[2021-08-20 04:04:16] (profile_api) HTTP error 404 for Milkdidmegud-kelthuzad
[2021-08-20 04:04:39] (profile_api) HTTP error 404 for Amorae8DC112-stormrage
[2021-08-20 04:05:05] (profile_api) HTTP error 404 for Yangdingtian-illidan
[2021-08-20 04:05:38] (profile_api) HTTP error 404 for Djßajlepka-area-52
[2021-08-20 04:05:49] (profile_api) HTTP error 404 for Theholybible-kiljaeden
[2021-08-20 04:06:00] (profile_api) HTTP error 404 for Blameshealer-bleeding-hollow
[2021-08-20 04:06:05] (profile_api) HTTP error 404 for Blowjabs-azralon
[2021-08-20 04:06:33] (profile_api) HTTP error 404 for Creamsalad-azgalor
[2021-08-20 04:07:18] (profile_api) HTTP error 404 for Aultyd-illidan
[2021-08-20 04:08:14] (profile_api) HTTP error 404 for Elnapo-azralon
[2021-08-20 04:08:17] (profile_api) HTTP error 404 for Sdd-tichondrius
[2021-08-20 04:08:24] (profile_api) HTTP error 404 for Shadowmeldop-illidan
[2021-08-20 04:08:39] (profile_api) HTTP error 404 for Mellowcore-frostmourne
[2021-08-20 04:09:01] (profile_api) HTTP error 404 for Ùñknown-tichondrius
[2021-08-20 04:09:06] (character_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:07] (write$profiles) NULL: In `collate$character_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_character_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "character_details") }, error = function(e) {     plan("sequential")     log_error(e, "character_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-08-20 04:09:11] (character_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:12] (write$profiles) NULL: In `collate$character_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_character_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "character_details") }, error = function(e) {     plan("sequential")     log_error(e, "character_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-08-20 04:09:17] (talent_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:17] (write$talents ) NULL: In `collate$talent_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(.x = obj, ~{         get_talent_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "talent_details") }, error = function(e) {     plan("sequential")     log_error(e, "talent_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-08-20 04:09:21] (talent_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:21] (write$talents) NULL: In `collate$talent_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(.x = obj, ~{         get_talent_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "talent_details") }, error = function(e) {     plan("sequential")     log_error(e, "talent_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-08-20 04:09:26] (media_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:26] (write$media) NULL: In `collate$media_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_media_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "media_details") }, error = function(e) {     plan("sequential")     log_error(e, "media_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-08-20 04:09:31] (media_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:31] (write$media) NULL: In `collate$media_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_media_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "media_details") }, error = function(e) {     plan("sequential")     log_error(e, "media_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-08-20 04:09:34] (stat_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:34] (write$stat) declare_call[[3]]: subscript out of bounds
[2021-08-20 04:09:40] (stat_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:40] (write$stat) declare_call[[3]]: subscript out of bounds
[2021-08-20 04:09:45] (equip_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:45] (write$equip) declare_call[[3]]: subscript out of bounds
[2021-08-20 04:09:49] (equip_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:49] (write$equip) declare_call[[3]]: subscript out of bounds
[2021-08-20 04:09:53] (soulbind_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:53] (write$soulbind) declare_call[[3]]: subscript out of bounds
[2021-08-20 04:09:59] (soulbind_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-08-20 04:09:59] (write$soulbind) declare_call[[3]]: subscript out of bounds
[2021-08-20 04:09:59] (write$covenant) infer_implicit_assignment_call(value): attempt to apply non-function
[2021-08-20 04:10:02] (write$conduit) conduit_list$conduits: $ operator is invalid for atomic vectors
