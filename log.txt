[2021-02-10 05:00:30] (profile_api) HTTP error 404 for Thegodofdmg-sargeras
[2021-02-10 05:00:36] (profile_api) HTTP error 404 for Smugpug-kelthuzad
[2021-02-10 05:00:58] (profile_api) HTTP error 404 for Katyushá-illidan
[2021-02-10 05:01:41] (profile_api) HTTP error 404 for Uigeadail-kiljaeden
[2021-02-10 05:02:04] (profile_api) HTTP error 404 for Macrossfan-frostmourne
[2021-02-10 05:02:14] (profile_api) HTTP error 404 for Milkduzmegud-kelthuzad
[2021-02-10 05:02:39] (profile_api) HTTP error 404 for Zedok-tichondrius
[2021-02-10 05:02:44] (profile_api) HTTP error 404 for Terzw-stormrage
[2021-02-10 05:02:47] (profile_api) HTTP error 404 for Aulty-malganis
[2021-02-10 05:03:03] (profile_api) HTTP error 404 for Galarrash-ragnaros
[2021-02-10 05:03:12] (profile_api) HTTP error 404 for Foi-stormreaver
[2021-02-10 05:03:30] (profile_api) HTTP error 404 for Scripte-illidan
[2021-02-10 05:04:00] (profile_api) HTTP error 404 for Milkdidmegud-kelthuzad
[2021-02-10 05:04:27] (profile_api) HTTP error 404 for More-stormreaver
[2021-02-10 05:04:45] (profile_api) HTTP error 404 for Drventure-crushridge
[2021-02-10 05:05:07] (profile_api) HTTP error 404 for Kishò-illidan
[2021-02-10 05:05:26] (profile_api) HTTP error 404 for Doobyx-malganis
[2021-02-10 05:05:50] (profile_api) HTTP error 404 for Symrol-sargeras
[2021-02-10 05:06:14] (profile_api) HTTP error 404 for Replicate-bleeding-hollow
[2021-02-10 05:06:19] (profile_api) HTTP error 404 for Fumz-barthilas
[2021-02-10 05:06:44] (profile_api) HTTP error 404 for Sheeshlol-tichondrius
[2021-02-10 05:06:50] (profile_api) HTTP error 404 for Davedog-area-52
[2021-02-10 05:07:22] (profile_api) HTTP error 404 for Toppeel-sargeras
[2021-02-10 05:07:34] (profile_api) HTTP error 404 for Goku-arthas
[2021-02-10 05:08:28] (profile_api) HTTP error 404 for Keqingz-dalaran
[2021-02-10 05:09:32] (profile_api) HTTP error 404 for Chauwow-sargeras
[2021-02-10 05:10:11] (character_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:11] (write$profiles) NULL: In `collate$character_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_character_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "character_details") }, error = function(e) {     plan("sequential")     log_error(e, "character_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-02-10 05:10:15] (character_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:15] (write$profiles) NULL: In `collate$character_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_character_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "character_details") }, error = function(e) {     plan("sequential")     log_error(e, "character_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-02-10 05:10:19] (talent_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:19] (write$talents ) NULL: In `collate$talent_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(.x = obj, ~{         get_talent_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "talent_details") }, error = function(e) {     plan("sequential")     log_error(e, "talent_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-02-10 05:10:25] (talent_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:25] (write$talents) NULL: In `collate$talent_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(.x = obj, ~{         get_talent_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "talent_details") }, error = function(e) {     plan("sequential")     log_error(e, "talent_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-02-10 05:10:31] (media_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:31] (write$media) NULL: In `collate$media_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_media_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "media_details") }, error = function(e) {     plan("sequential")     log_error(e, "media_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-02-10 05:10:37] (media_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:37] (write$media) NULL: In `collate$media_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_media_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "media_details") }, error = function(e) {     plan("sequential")     log_error(e, "media_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2021-02-10 05:10:42] (stat_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:42] (write$stat) declare_call[[3]]: subscript out of bounds
[2021-02-10 05:10:46] (stat_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:46] (write$stat) declare_call[[3]]: subscript out of bounds
[2021-02-10 05:10:50] (equip_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:50] (write$equip) declare_call[[3]]: subscript out of bounds
[2021-02-10 05:10:55] (equip_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:10:55] (write$equip) declare_call[[3]]: subscript out of bounds
[2021-02-10 05:11:00] (soulbind_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:11:00] (write$soulbind) declare_call[[3]]: subscript out of bounds
[2021-02-10 05:11:05] (soulbind_details) content(error)$code: $ operator is invalid for atomic vectors
[2021-02-10 05:11:05] (write$soulbind) declare_call[[3]]: subscript out of bounds
[2021-02-10 05:11:05] (write$covenant) infer_implicit_assignment_call(value): attempt to apply non-function
[2021-02-10 05:11:09] (write$conduit) conduit_list$conduits: $ operator is invalid for atomic vectors
