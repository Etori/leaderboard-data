[2023-01-10 05:00:23] (profile_api) HTTP error 404 for Icespice-zuljin
[2023-01-10 05:00:38] (profile_api) HTTP error 404 for Sawajirii-tichondrius
[2023-01-10 05:00:43] (profile_api) HTTP error 404 for Emìlia-malygos
[2023-01-10 05:01:08] (profile_api) HTTP error 404 for Blackmood-tichondrius
[2023-01-10 05:01:50] (profile_api) HTTP error 404 for Calmcalmcalm-sargeras
[2023-01-10 05:02:16] (profile_api) HTTP error 404 for Strongslicer-ravencrest
[2023-01-10 05:02:37] (profile_api) HTTP error 404 for Ælgæ-tichondrius
[2023-01-10 05:02:56] (profile_api) HTTP error 404 for Kinowarr-area-52
[2023-01-10 05:03:00] (character_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:00] (write$profiles) NULL: In `collate$character_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_character_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "character_details") }, error = function(e) {     plan("sequential")     log_error(e, "character_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2023-01-10 05:03:03] (character_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:03] (write$profiles) NULL: In `collate$character_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_character_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "character_details") }, error = function(e) {     plan("sequential")     log_error(e, "character_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2023-01-10 05:03:06] (talent_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:06] (write$talents ) NULL: In `collate$talent_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(.x = obj, ~{         get_talent_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "talent_details") }, error = function(e) {     plan("sequential")     log_error(e, "talent_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2023-01-10 05:03:09] (talent_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:09] (write$talents) NULL: In `collate$talent_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(.x = obj, ~{         get_talent_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "talent_details") }, error = function(e) {     plan("sequential")     log_error(e, "talent_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2023-01-10 05:03:12] (media_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:12] (write$media) NULL: In `collate$media_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_media_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "media_details") }, error = function(e) {     plan("sequential")     log_error(e, "media_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2023-01-10 05:03:16] (media_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:16] (write$media) NULL: In `collate$media_details(token, data)` at `check_output(catch <- tryCatch({     plan("multisession", workers = availableCores(constraints = "multicore"))     dat <- future_map(obj, ~{         get_media_details(token, .x)     }, .options = furrr_options(seed = TRUE))     results <- compact(map(dat, filter_na))     plan("sequential")     return(check_output(results, List())) }, warning = function(w) {     plan("sequential")     log_error(w, "media_details") }, error = function(e) {     plan("sequential")     log_error(e, "media_details") }), List())`:
wrong return value, type mismatch
`typeof(value)`: "NULL"
`expected`:      "list"
[2023-01-10 05:03:21] (stat_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:21] (write$stat) declare_call[[3]]: subscript out of bounds
[2023-01-10 05:03:27] (stat_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:27] (write$stat) declare_call[[3]]: subscript out of bounds
[2023-01-10 05:03:32] (equip_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:32] (write$equip) declare_call[[3]]: subscript out of bounds
[2023-01-10 05:03:35] (equip_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:35] (write$equip) declare_call[[3]]: subscript out of bounds
[2023-01-10 05:03:39] (soulbind_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:39] (write$soulbind) declare_call[[3]]: subscript out of bounds
[2023-01-10 05:03:43] (soulbind_details) content(error)$code: $ operator is invalid for atomic vectors
[2023-01-10 05:03:43] (write$soulbind) declare_call[[3]]: subscript out of bounds
[2023-01-10 05:03:43] (write$covenant) infer_implicit_assignment_call(value): attempt to apply non-function
[2023-01-10 05:03:45] (write$conduit) conduit_list$conduits: $ operator is invalid for atomic vectors
